import asyncio
import nest_asyncio

def get_FUN(tickers, category='FUN', mode='TA'): 
    start = timer()
    nest_asyncio.apply()
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    try:
        list_of_html= loop.run_until_complete(get_HTML_main_async(tickers, category))
    finally:
        loop.close()
        
        
async def get_HTML_main_async(tickers, category):
    referer="https://google.com"
    user_agent_perm='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.108 Safari/537.36'
    headers = {
        "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
        "Accept-Encoding":"gzip, deflate",
        "Accept-Language":"en-GB,en;q=0.9,en-US;q=0.8,ml;q=0.7",
        "Connection":"keep-alive",
        "Referer":referer,
        "Upgrade-Insecure-Requests":"1",
        #"User-Agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36"
        "User-Agent":user_agent_perm
        }
    tcp_conn_max=48
    connector = aiohttp.TCPConnector(limit=tcp_conn_max, limit_per_host=tcp_conn_max)
    session = aiohttp.ClientSession(connector=connector, headers=headers)
#        ClientSession(\
#        connector=connector, \
#        headers=headers,\
#        raise_for_status=True)
    list_of_html = await asyncio.gather(*[get_HTML_subf_async(url, session) for url in urls])
    await session.close()
    return list_of_html
